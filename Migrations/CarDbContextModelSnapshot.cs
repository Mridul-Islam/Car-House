// <auto-generated />
using System;
using Car_House.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Car_House.Migrations
{
    [DbContext(typeof(CarDbContext))]
    partial class CarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("Car_House.Models.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BrandName")
                        .HasColumnType("TEXT");

                    b.HasKey("BrandID");

                    b.ToTable("BrandList");
                });

            modelBuilder.Entity("Car_House.Models.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BodyType")
                        .HasColumnType("TEXT");

                    b.Property<int>("BrandID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BrandName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CarDescription")
                        .HasColumnType("TEXT");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<int>("Condition")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayImage")
                        .HasColumnType("TEXT");

                    b.Property<int>("EngineType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuelType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GearType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Mileage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoOfSeats")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("SteeringType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Transmission")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarID");

                    b.HasIndex("BrandID");

                    b.ToTable("CarList");
                });

            modelBuilder.Entity("Car_House.Models.Image", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarID")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CarID1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageLocation")
                        .HasColumnType("TEXT");

                    b.HasKey("ImageID");

                    b.HasIndex("CarID1");

                    b.ToTable("ImageList");
                });

            modelBuilder.Entity("Car_House.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityQuestion")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("UserList");
                });

            modelBuilder.Entity("Car_House.Models.Car", b =>
                {
                    b.HasOne("Car_House.Models.Brand", null)
                        .WithMany("Cars")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Car_House.Models.Image", b =>
                {
                    b.HasOne("Car_House.Models.Car", "Car")
                        .WithMany("Images")
                        .HasForeignKey("CarID1");
                });
#pragma warning restore 612, 618
        }
    }
}
